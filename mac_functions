npm (){
    docker run --rm -ti -v ~/.ssh:/root/.ssh -v ~/.config:/root/.config -v ~/.kube:/root/.kube -v $PWD:/var/gcloud -w /var/gcloud cprietorod/my-cloud-sdk-docker:latest npm $1 $2 $3 $3
}

node (){
    docker run --rm -ti -v ~/.ssh:/root/.ssh -v ~/.config:/root/.config -v ~/.kube:/root/.kube -v $PWD:/var/gcloud -w /var/gcloud cprietorod/my-cloud-sdk-docker:latest node $1 $2 $3 $4
}

gulp (){
    docker run --rm -ti -v ~/.ssh:/root/.ssh -v ~/.config:/root/.config -v ~/.kube:/root/.kube -v $PWD:/var/gcloud -w /var/gcloud cprietorod/my-cloud-sdk-docker:latest gulp $1 $2 $3 $4
}

extract () {
    if [ -f $1 ]; then
        case $1 in
            *.tar.bz2)  tar -jxvf $1                        ;;
            *.tar.gz)   tar -zxvf $1                        ;;
            *.bz2)      bunzip2 $1                          ;;
            *.dmg)      hdiutil mount $1                    ;;
            *.gz)       gunzip $1                           ;;
            *.tar)      tar -xvf $1                         ;;
            *.tbz2)     tar -jxvf $1                        ;;
            *.tgz)      tar -zxvf $1                        ;;
            *.zip)      unzip $1                            ;;
            *.ZIP)      unzip $1                            ;;
            *.pax)      cat $1 | pax -r                     ;;
            *.pax.Z)    uncompress $1 --stdout | pax -r     ;;
            *.rar)      unrar x $1                          ;;
            *.Z)        uncompress $1                       ;;
            *)          echo "'$1' cannot be extracted/mounted via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}


vscode2 () {
    while [ "$1" != "" ]; do
    PARAM=`echo $1 | awk -F= '{print $1}'`
    VALUE=`echo $1 | awk -F= '{print $2}'`
    VSCODE_COMMAND="docker stop vscode || echo 'no hay docker' ; $GCLOUD1 -d --name vscode $GCLOUD2 $GCLOUD3 code-server -H -N -e /root/.vsextentions ; /Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --app=http://localhost:8443 --profile-directory=\"Profile 4\" "

    case $PARAM in
        -s | --stop)
            VSCODE_COMMAND="docker stop vscode"
            ;;
        -j | --justchrome)
            VSCODE_COMMAND="/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --app=http://localhost:8443 --profile-directory=\"Profile 4\" "
            ;;
        -J | --justdocker)
            VSCODE_COMMAND="docker stop vscode || echo 'no hay docker' ; $GCLOUD1 -d --name vscode $GCLOUD2 $GCLOUD3 code-server -H -N -e /root/.vsextentions"
            ;;
        .)
            VSCODE_COMMAND="docker stop vscode || echo 'no hay docker' ; $GCLOUD1 -d --name vscode -v $PWD:/var/gcloud:cached -w /var/gcloud $GCLOUD3 code-server -H -N -e /root/.vsextentions ; /Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --app=http://localhost:8443 --profile-directory=\"Profile 4\" "
            ;;
        *)
            VSCODE_COMMAND="docker stop vscode || echo 'no hay docker' ; $GCLOUD1 -d --name vscode -v $1:/var/gcloud:cached -w /var/gcloud $GCLOUD3 code-server -H -N -e /root/.vsextentions ; /Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --app=http://localhost:8443 --profile-directory=\"Profile 4\" "
            ;;
    esac
    shift
    echo "command $VSCODE_COMMAND"
done

}

function source_bash {
  emulate -L bash
  builtin source "$@"
}
