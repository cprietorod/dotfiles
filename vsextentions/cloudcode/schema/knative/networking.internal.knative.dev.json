{
  "type": "object",
  "anyOf": [
    {
      "$ref": "#/definitions/Certificate"
    },
    {
      "$ref": "#/definitions/CertificateList"
    },
    {
      "$ref": "#/definitions/ClusterIngress"
    },
    {
      "$ref": "#/definitions/ServerlessService"
    }
  ],
  "definitions": {
    "Certificate": {
      "properties": {
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\n+optional\n"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional\n"
        },
        "metadata": {
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional\n"
        },
        "spec": {
          "$ref": "#/definitions/CertificateSpec",
          "description": "Spec is the desired state of the Certificate.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n+optional\n"
        },
        "status": {
          "$ref": "#/definitions/CertificateStatus",
          "description": "Status is the current state of the Certificate.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n+optional\n"
        }
      },
      "description": "Certificate is responsible for provisioning a SSL certificate for the\ngiven hosts. It is a Knative abstraction for various SSL certificate\nprovisioning solutions (such as cert-manager or self-signed SSL certificate).\n"
    },
    "CertificateList": {
      "properties": {
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\n+optional\n"
        },
        "items": {
          "items": {
            "$ref": "#/definitions/Certificate"
          },
          "type": "array",
          "description": "Items is the list of `Certificate`.\n"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional\n"
        },
        "metadata": {
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard object's metadata.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional\n"
        }
      },
      "description": "CertificateList is a collection of `Certificate`.\n"
    },
    "CertificateSpec": {
      "properties": {
        "dnsNames": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "DNSNames is a list of DNS names the Certificate could support.\nThe wildcard format of DNSNames (e.g. *.default.example.com) is supported.\n"
        },
        "secretName": {
          "type": "string",
          "description": "SecretName is the name of the secret resource to store the SSL certificate in.\n"
        }
      },
      "description": "CertificateSpec defines the desired state of a `Certificate`.\n"
    },
    "CertificateStatus": {
      "properties": {
        "conditions": {
          "$ref": "#/definitions/github.com.knative.pkg.apis.duck.v1alpha1.Conditions",
          "description": "Conditions the latest available observations of a resource's current state.\n+optional\n+patchMergeKey=type\n+patchStrategy=merge\n"
        },
        "notAfter": {
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time",
          "description": "The expiration time of the TLS certificate stored in the secret named\nby this resource in spec.secretName.\n+optional\n"
        },
        "observedGeneration": {
          "type": "integer",
          "description": "ObservedGeneration is the 'Generation' of the Service that\nwas last processed by the controller.\n+optional\n"
        }
      },
      "description": "CertificateStatus defines the observed state of a `Certificate`.\n"
    },
    "ClusterIngress": {
      "properties": {
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\n+optional\n"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional\n"
        },
        "metadata": {
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional\n"
        },
        "spec": {
          "$ref": "#/definitions/IngressSpec",
          "description": "Spec is the desired state of the ClusterIngress.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status\n+optional\n"
        },
        "status": {
          "$ref": "#/definitions/IngressStatus",
          "description": "Status is the current state of the ClusterIngress.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status\n+optional\n"
        }
      },
      "description": "ClusterIngress is a collection of rules that allow inbound connections to reach the\nendpoints defined by a backend. A ClusterIngress can be configured to give services\nexternally-reachable URLs, load balance traffic, offer name based virtual hosting, etc.\n\nThis is heavily based on K8s Ingress https://godoc.org/k8s.io/api/extensions/v1beta1#Ingress\nwhich some highlighted modifications.\n"
    },
    "ClusterIngressBackendSplit": {
      "properties": {
        "percent": {
          "type": "integer",
          "description": "Specifies the split percentage, a number between 0 and 100.  If\nonly one split is specified, we default to 100.\n\nNOTE: This differs from K8s Ingress to allow percentage split.\n"
        },
        "serviceName": {
          "type": "string",
          "description": "Specifies the name of the referenced service.\n"
        },
        "serviceNamespace": {
          "type": "string",
          "description": "Specifies the namespace of the referenced service.\n\nNOTE: This differs from K8s Ingress to allow routing to different namespaces.\n"
        },
        "servicePort": {
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.util.intstr.IntOrString",
          "description": "Specifies the port of the referenced service.\n"
        }
      },
      "description": "ClusterIngressBackendSplit describes all endpoints for a given service and port.\n"
    },
    "ClusterIngressRule": {
      "properties": {
        "hosts": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Host is the fully qualified domain name of a network host, as defined\nby RFC 3986. Note the following deviations from the \"host\" part of the\nURI as defined in the RFC:\n1. IPs are not allowed. Currently a rule value can only apply to the\n\t  IP in the Spec of the parent ClusterIngress.\n2. The `:` delimiter is not respected because ports are not allowed.\n\t  Currently the port of an ClusterIngress is implicitly :80 for http and\n\t  :443 for https.\nBoth these may change in the future.\nIf the host is unspecified, the ClusterIngress routes all traffic based on the\nspecified ClusterIngressRuleValue.\nIf multiple matching Hosts were provided, the first rule will take precedent.\n+optional\n"
        },
        "http": {
          "$ref": "#/definitions/HTTPClusterIngressRuleValue",
          "description": "HTTP represents a rule to apply against incoming requests. If the\nrule is satisfied, the request is routed to the specified backend.\n"
        }
      },
      "description": "ClusterIngressRule represents the rules mapping the paths under a specified host to\nthe related backend services. Incoming requests are first evaluated for a host\nmatch, then routed to the backend associated with the matching ClusterIngressRuleValue.\n"
    },
    "ClusterIngressTLS": {
      "properties": {
        "hosts": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Hosts is a list of hosts included in the TLS certificate. The values in\nthis list must match the name/s used in the tlsSecret. Defaults to the\nwildcard host setting for the loadbalancer controller fulfilling this\nClusterIngress, if left unspecified.\n+optional\n"
        },
        "privateKey": {
          "type": "string",
          "description": "PrivateKey identifies the private key filename in the secret.\nDefaults to `tls.key`.\n+optional\n"
        },
        "secretName": {
          "type": "string",
          "description": "SecretName is the name of the secret used to terminate SSL traffic.\n"
        },
        "secretNamespace": {
          "type": "string",
          "description": "SecretNamespace is the namespace of the secret used to terminate SSL traffic.\n"
        },
        "serverCertificate": {
          "type": "string",
          "description": "ServerCertificate identifies the certificate filename in the secret.\nDefaults to `tls.cert`.\n+optional\n"
        }
      },
      "description": "ClusterIngressTLS describes the transport layer security associated with an ClusterIngress.\n"
    },
    "HTTPClusterIngressPath": {
      "properties": {
        "appendHeaders": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "AppendHeaders allow specifying additional HTTP headers to add\nbefore forwarding a request to the destination service.\n\nNOTE: This differs from K8s Ingress which doesn't allow header appending.\n+optional\n"
        },
        "path": {
          "type": "string",
          "description": "Path is an extended POSIX regex as defined by IEEE Std 1003.1,\n(i.e this follows the egrep/unix syntax, not the perl syntax)\nmatched against the path of an incoming request. Currently it can\ncontain characters disallowed from the conventional \"path\"\npart of a URL as defined by RFC 3986. Paths must begin with\na '/'. If unspecified, the path defaults to a catch all sending\ntraffic to the backend.\n+optional\n"
        },
        "retries": {
          "$ref": "#/definitions/HTTPRetry",
          "description": "Retry policy for HTTP requests.\n\nNOTE: This differs from K8s Ingress which doesn't allow retry settings.\n+optional\n"
        },
        "splits": {
          "items": {
            "$ref": "#/definitions/ClusterIngressBackendSplit"
          },
          "type": "array",
          "description": "Splits defines the referenced service endpoints to which the traffic\nwill be forwarded to.\n"
        },
        "timeout": {
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Duration",
          "description": "Timeout for HTTP requests.\n\nNOTE: This differs from K8s Ingress which doesn't allow setting timeouts.\n+optional\n"
        }
      },
      "description": "HTTPClusterIngressPath associates a path regex with a backend. Incoming URLs matching\nthe path are forwarded to the backend.\n"
    },
    "HTTPClusterIngressRuleValue": {
      "properties": {
        "paths": {
          "items": {
            "$ref": "#/definitions/HTTPClusterIngressPath"
          },
          "type": "array",
          "description": "A collection of paths that map requests to backends.\n\nIf they are multiple matching paths, the first match takes precendent.\n"
        }
      },
      "description": "HTTPClusterIngressRuleValue is a list of http selectors pointing to backends.\nIn the example: http://\u003chost\u003e/\u003cpath\u003e?\u003csearchpart\u003e -\u003e backend where\nwhere parts of the url correspond to RFC 3986, this resource will be used\nto match against everything after the last '/' and before the first '?'\nor '#'.\n"
    },
    "HTTPRetry": {
      "properties": {
        "attempts": {
          "type": "integer",
          "description": "Number of retries for a given request.\n"
        },
        "perTryTimeout": {
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Duration",
          "description": "Timeout per retry attempt for a given request. format: 1h/1m/1s/1ms. MUST BE \u003e=1ms.\n"
        }
      },
      "description": "HTTPRetry describes the retry policy to use when a HTTP request fails.\n"
    },
    "IngressSpec": {
      "properties": {
        "generation": {
          "type": "integer",
          "description": "DeprecatedGeneration was used prior in Kubernetes versions \u003c1.11\nwhen metadata.generation was not being incremented by the api server\n\nThis property will be dropped in future Knative releases and should\nnot be used - use metadata.generation\n\nTracking issue: https://github.com/knative/serving/issues/643\n\n+optional\n"
        },
        "rules": {
          "items": {
            "$ref": "#/definitions/ClusterIngressRule"
          },
          "type": "array",
          "description": "A list of host rules used to configure the ClusterIngress.\n+optional\n"
        },
        "tls": {
          "items": {
            "$ref": "#/definitions/ClusterIngressTLS"
          },
          "type": "array",
          "description": "TLS configuration. Currently ClusterIngress only supports a single TLS\nport: 443. If multiple members of this list specify different hosts, they\nwill be multiplexed on the same port according to the hostname specified\nthrough the SNI TLS extension, if the ingress controller fulfilling the\ningress supports SNI.\n+optional\n"
        },
        "visibility": {
          "$ref": "#/definitions/IngressVisibility",
          "description": "Visibility setting.\n"
        }
      },
      "description": "IngressSpec describes the ClusterIngress the user wishes to exist.\n\nIn general this follows the same shape as K8s Ingress.\nSome notable differences:\n- Backends now can have namespace:\n- Traffic can be split across multiple backends.\n- Timeout \u0026 Retry can be configured.\n- Headers can be appended.\n"
    },
    "IngressStatus": {
      "properties": {
        "conditions": {
          "$ref": "#/definitions/github.com.knative.pkg.apis.duck.v1alpha1.Conditions",
          "description": "Conditions the latest available observations of a resource's current state.\n+optional\n+patchMergeKey=type\n+patchStrategy=merge\n"
        },
        "loadBalancer": {
          "$ref": "#/definitions/LoadBalancerStatus",
          "description": "LoadBalancer contains the current status of the load-balancer.\n+optional\n"
        },
        "observedGeneration": {
          "type": "integer",
          "description": "ObservedGeneration is the 'Generation' of the Service that\nwas last processed by the controller.\n+optional\n"
        }
      },
      "description": "IngressStatus describe the current state of the ClusterIngress.\n"
    },
    "IngressVisibility": {
      "type": "string",
      "description": "IngressVisibility describes whether the Ingress should be exposed to\npublic gateways or not.\n"
    },
    "LoadBalancerIngressStatus": {
      "properties": {
        "domain": {
          "type": "string",
          "description": "Domain is set for load-balancer ingress points that are DNS based\n(typically AWS load-balancers)\n+optional\n"
        },
        "domainInternal": {
          "type": "string",
          "description": "DomainInternal is set if there is a cluster-local DNS name to access the Ingress.\n\nNOTE: This differs from K8s Ingress, since we also desire to have a cluster-local\n      DNS name to allow routing in case of not having a mesh.\n\n+optional\n"
        },
        "ip": {
          "type": "string",
          "description": "IP is set for load-balancer ingress points that are IP based\n(typically GCE or OpenStack load-balancers)\n+optional\n"
        },
        "meshOnly": {
          "type": "boolean",
          "description": "MeshOnly is set if the ClusterIngress is only load-balanced through a Service mesh.\n+optional\n"
        }
      },
      "description": "LoadBalancerIngress represents the status of a load-balancer ingress point:\ntraffic intended for the service should be sent to an ingress point.\n"
    },
    "LoadBalancerStatus": {
      "properties": {
        "ingress": {
          "items": {
            "$ref": "#/definitions/LoadBalancerIngressStatus"
          },
          "type": "array",
          "description": "Ingress is a list containing ingress points for the load-balancer.\nTraffic intended for the service should be sent to these ingress points.\n+optional\n"
        }
      },
      "description": "LoadBalancerStatus represents the status of a load-balancer.\n"
    },
    "ServerlessService": {
      "properties": {
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\n+optional\n"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional\n"
        },
        "metadata": {
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta",
          "description": "Standard object's metadata.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional\n"
        },
        "spec": {
          "$ref": "#/definitions/ServerlessServiceSpec",
          "description": "Spec is the desired state of the ServerlessService.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status\n+optional\n"
        },
        "status": {
          "$ref": "#/definitions/ServerlessServiceStatus",
          "description": "Status is the current state of the ServerlessService.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status\n+optional\n"
        }
      },
      "description": "ServerlessService is a proxy for the K8s service objects containing the\nendpoints for the revision, whether those are endpoints of the activator or\nrevision pods.\nSee: https://knative.page.link/naxz for details.\n"
    },
    "ServerlessServiceOperationMode": {
      "type": "string",
      "description": "ServerlessServiceOperationMode is an enumeration of the modes of operation\nfor the ServerlessService.\n"
    },
    "ServerlessServiceSpec": {
      "properties": {
        "mode": {
          "$ref": "#/definitions/ServerlessServiceOperationMode",
          "description": "Mode describes the mode of operation of the ServerlessService.\n"
        },
        "selector": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Selector describes the pod labels for selection of pods for the\nrevision. Same as K8s service selector.\nSee: https://kubernetes.io/docs/concepts/services-networking/service/.\n"
        }
      },
      "description": "ServerlessServiceSpec describes the ServerlessService.\n"
    },
    "ServerlessServiceStatus": {
      "properties": {
        "conditions": {
          "$ref": "#/definitions/github.com.knative.pkg.apis.duck.v1alpha1.Conditions",
          "description": "Conditions the latest available observations of a resource's current state.\n+optional\n+patchMergeKey=type\n+patchStrategy=merge\n"
        },
        "observedGeneration": {
          "type": "integer",
          "description": "ObservedGeneration is the 'Generation' of the Service that\nwas last processed by the controller.\n+optional\n"
        },
        "serviceName": {
          "type": "string",
          "description": "ServiceName holds the name of a core K8s Service resource that\nload balances over the pods backing this Revision (activator or revision).\n+optional\n"
        }
      },
      "description": "ServerlessServiceStatus describes the current state of the ServerlessService.\n"
    },
    "github.com.knative.pkg.apis.VolatileTime": {
      "description": "VolatileTime wraps metav1.Time\n"
    },
    "github.com.knative.pkg.apis.duck.v1alpha1.Condition": {
      "properties": {
        "lastTransitionTime": {
          "$ref": "#/definitions/github.com.knative.pkg.apis.VolatileTime",
          "description": "LastTransitionTime is the last time the condition transitioned from one status to another.\nWe use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic\ndifferences (all other things held constant).\n+optional\n"
        },
        "message": {
          "type": "string",
          "description": "A human readable message indicating details about the transition.\n+optional\n"
        },
        "reason": {
          "type": "string",
          "description": "The reason for the condition's last transition.\n+optional\n"
        },
        "severity": {
          "$ref": "#/definitions/github.com.knative.pkg.apis.duck.v1alpha1.ConditionSeverity",
          "description": "Severity with which to treat failures of this type of condition.\nWhen this is not specified, it defaults to Error.\n+optional\n"
        },
        "status": {
          "$ref": "#/definitions/k8s.io.api.core.v1.ConditionStatus",
          "description": "Status of the condition, one of True, False, Unknown.\n+required\n"
        },
        "type": {
          "$ref": "#/definitions/github.com.knative.pkg.apis.duck.v1alpha1.ConditionType",
          "description": "Type of condition.\n+required\n"
        }
      },
      "description": "Conditions defines a readiness condition for a Knative resource.\nSee: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#typical-status-properties\n+k8s:deepcopy-gen=true\n"
    },
    "github.com.knative.pkg.apis.duck.v1alpha1.ConditionSeverity": {
      "type": "string",
      "description": "ConditionSeverity expresses the severity of a Condition Type failing.\n"
    },
    "github.com.knative.pkg.apis.duck.v1alpha1.ConditionType": {
      "type": "string",
      "description": "ConditionType is a camel-cased condition type.\n"
    },
    "github.com.knative.pkg.apis.duck.v1alpha1.Conditions": {
      "items": {
        "$ref": "#/definitions/github.com.knative.pkg.apis.duck.v1alpha1.Condition"
      },
      "type": "array",
      "description": "Conditions is the schema for the conditions portion of the payload\n"
    },
    "k8s.io.api.core.v1.ConditionStatus": {
      "type": "string"
    },
    "k8s.io.apimachinery.pkg.apis.meta.v1.CauseType": {
      "type": "string",
      "description": "CauseType is a machine readable value providing more detail about what\noccurred in a status response. An operation may have multiple causes for a\nstatus (whether Failure or Success).\n"
    },
    "k8s.io.apimachinery.pkg.apis.meta.v1.Duration": {
      "description": "Duration is a wrapper around time.Duration which supports correct\nmarshaling to YAML and JSON. In particular, it marshals into strings, which\ncan be used as map keys in json.\n"
    },
    "k8s.io.apimachinery.pkg.apis.meta.v1.Initializer": {
      "properties": {
        "name": {
          "type": "string",
          "description": "name of the process that is responsible for initializing this object.\n"
        }
      },
      "description": "Initializer is information about an initializer that has not yet completed.\n"
    },
    "k8s.io.apimachinery.pkg.apis.meta.v1.Initializers": {
      "properties": {
        "pending": {
          "items": {
            "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Initializer"
          },
          "type": "array",
          "description": "Pending is a list of initializers that must execute in order before this object is visible.\nWhen the last pending initializer is removed, and no failing result is set, the initializers\nstruct will be set to nil and the object is considered as initialized and visible to all\nclients.\n+patchMergeKey=name\n+patchStrategy=merge\n"
        },
        "result": {
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Status",
          "description": "If result is set with the Failure field, the object will be persisted to storage and then deleted,\nensuring that other clients can observe the deletion.\n"
        }
      },
      "description": "Initializers tracks the progress of initialization.\n"
    },
    "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta": {
      "properties": {
        "continue": {
          "type": "string",
          "description": "continue may be set if the user set a limit on the number of items returned, and indicates that\nthe server has more data available. The value is opaque and may be used to issue another request\nto the endpoint that served this list to retrieve the next set of available objects. Continuing a\nlist may not be possible if the server configuration has changed or more than a few minutes have\npassed. The resourceVersion field returned when using this continue value will be identical to\nthe value in the first response.\n"
        },
        "resourceVersion": {
          "type": "string",
          "description": "String that identifies the server's internal version of this object that\ncan be used by clients to determine when objects have changed.\nValue must be treated as opaque by clients and passed unmodified back to the server.\nPopulated by the system.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency\n+optional\n"
        },
        "selfLink": {
          "type": "string",
          "description": "selfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n+optional\n"
        }
      },
      "description": "ListMeta describes metadata that synthetic resources must have, including lists and\nvarious status objects. A resource may have only one of {ObjectMeta, ListMeta}.\n"
    },
    "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta": {
      "properties": {
        "annotations": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional\n"
        },
        "clusterName": {
          "type": "string",
          "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n+optional\n"
        },
        "creationTimestamp": {
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time",
          "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional\n"
        },
        "deletionGracePeriodSeconds": {
          "type": "integer",
          "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional\n"
        },
        "deletionTimestamp": {
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time",
          "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n+optional\n"
        },
        "finalizers": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\n+optional\n+patchStrategy=merge\n"
        },
        "generateName": {
          "type": "string",
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency\n+optional\n"
        },
        "generation": {
          "type": "integer",
          "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional\n"
        },
        "initializers": {
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Initializers",
          "description": "An initializer is a controller which enforces some system invariant at object creation time.\nThis field is a list of initializers that have not yet acted on this object. If nil or empty,\nthis object has been completely initialized. Otherwise, the object is considered uninitialized\nand is hidden (in list/watch and get calls) from clients that haven't explicitly asked to\nobserve uninitialized objects.\n\nWhen an object is created, the system will populate this list with the current set of initializers.\nOnly privileged users may set or modify this list. Once it is empty, it may not be modified further\nby any user.\n"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional\n"
        },
        "name": {
          "type": "string",
          "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional\n"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace defines the space within each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional\n"
        },
        "ownerReferences": {
          "items": {
            "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.OwnerReference"
          },
          "type": "array",
          "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge\n"
        },
        "resourceVersion": {
          "type": "string",
          "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency\n+optional\n"
        },
        "selfLink": {
          "type": "string",
          "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n+optional\n"
        },
        "uid": {
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.types.UID",
          "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional\n"
        }
      },
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects\nusers must create.\n"
    },
    "k8s.io.apimachinery.pkg.apis.meta.v1.OwnerReference": {
      "properties": {
        "apiVersion": {
          "type": "string",
          "description": "API version of the referent.\n"
        },
        "blockOwnerDeletion": {
          "type": "boolean",
          "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then\nthe owner cannot be deleted from the key-value store until this\nreference is removed.\nDefaults to false.\nTo set this field, a user needs \"delete\" permission of the owner,\notherwise 422 (Unprocessable Entity) will be returned.\n+optional\n"
        },
        "controller": {
          "type": "boolean",
          "description": "If true, this reference points to the managing controller.\n+optional\n"
        },
        "kind": {
          "type": "string",
          "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n"
        },
        "name": {
          "type": "string",
          "description": "Name of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n"
        },
        "uid": {
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.types.UID",
          "description": "UID of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n"
        }
      },
      "description": "OwnerReference contains enough information to let you identify an owning\nobject. Currently, an owning object must be in the same namespace, so there\nis no namespace field.\n"
    },
    "k8s.io.apimachinery.pkg.apis.meta.v1.Status": {
      "properties": {
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources\n+optional\n"
        },
        "code": {
          "type": "integer",
          "description": "Suggested HTTP return code for this status, 0 if not set.\n+optional\n"
        },
        "details": {
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.StatusDetails",
          "description": "Extended data associated with the reason.  Each reason may define its\nown extended details. This field is optional and the data returned\nis not guaranteed to conform to any schema except that defined by\nthe reason type.\n+optional\n"
        },
        "kind": {
          "type": "string",
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional\n"
        },
        "message": {
          "type": "string",
          "description": "A human-readable description of the status of this operation.\n+optional\n"
        },
        "metadata": {
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta",
          "description": "Standard list metadata.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional\n"
        },
        "reason": {
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.StatusReason",
          "description": "A machine-readable description of why this operation is in the\n\"Failure\" status. If this value is empty there\nis no information available. A Reason clarifies an HTTP status\ncode but does not override it.\n+optional\n"
        },
        "status": {
          "type": "string",
          "description": "Status of the operation.\nOne of: \"Success\" or \"Failure\".\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status\n+optional\n"
        }
      },
      "description": "Status is a return value for calls that don't return other objects.\n"
    },
    "k8s.io.apimachinery.pkg.apis.meta.v1.StatusCause": {
      "properties": {
        "field": {
          "type": "string",
          "description": "The field of the resource that has caused this error, as named by its JSON\nserialization. May include dot and postfix notation for nested attributes.\nArrays are zero-indexed.  Fields may appear more than once in an array of\ncauses due to fields having multiple errors.\nOptional.\n\nExamples:\n  \"name\" - the field \"name\" on the current resource\n  \"items[0].name\" - the field \"name\" on the first array entry in \"items\"\n+optional\n"
        },
        "message": {
          "type": "string",
          "description": "A human-readable description of the cause of the error.  This field may be\npresented as-is to a reader.\n+optional\n"
        },
        "reason": {
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.CauseType",
          "description": "A machine-readable description of the cause of the error. If this value is\nempty there is no information available.\n+optional\n"
        }
      },
      "description": "StatusCause provides more information about an api.Status failure, including\ncases when multiple errors are encountered.\n"
    },
    "k8s.io.apimachinery.pkg.apis.meta.v1.StatusDetails": {
      "properties": {
        "causes": {
          "items": {
            "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.StatusCause"
          },
          "type": "array",
          "description": "The Causes array includes more details associated with the StatusReason\nfailure. Not all StatusReasons may provide detailed causes.\n+optional\n"
        },
        "group": {
          "type": "string",
          "description": "The group attribute of the resource associated with the status StatusReason.\n+optional\n"
        },
        "kind": {
          "type": "string",
          "description": "The kind attribute of the resource associated with the status StatusReason.\nOn some operations may differ from the requested resource Kind.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\n+optional\n"
        },
        "name": {
          "type": "string",
          "description": "The name attribute of the resource associated with the status StatusReason\n(when there is a single name which can be described).\n+optional\n"
        },
        "retryAfterSeconds": {
          "type": "integer",
          "description": "If specified, the time in seconds before the operation should be retried. Some errors may indicate\nthe client must take an alternate action - for those errors this field may indicate how long to wait\nbefore taking the alternate action.\n+optional\n"
        },
        "uid": {
          "$ref": "#/definitions/k8s.io.apimachinery.pkg.types.UID",
          "description": "UID of the resource.\n(when there is a single resource which can be described).\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional\n"
        }
      },
      "description": "StatusDetails is a set of additional properties that MAY be set by the\nserver to provide additional information about a response. The Reason\nfield of a Status object defines what attributes will be set. Clients\nmust ignore fields that do not match the defined type of each attribute,\nand should assume that any attribute may be empty, invalid, or under\ndefined.\n"
    },
    "k8s.io.apimachinery.pkg.apis.meta.v1.StatusReason": {
      "type": "string",
      "description": "StatusReason is an enumeration of possible failure causes.  Each StatusReason\nmust map to a single HTTP status code, but multiple reasons may map\nto the same HTTP status code.\nTODO: move to apiserver\n"
    },
    "k8s.io.apimachinery.pkg.apis.meta.v1.Time": {
      "description": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false\n",
      "type": "string",
      "format": "date-time"
    },
    "k8s.io.apimachinery.pkg.types.UID": {
      "type": "string",
      "description": "UID is a type that holds unique ID values, including UUIDs.  Because we\ndon't ONLY use UUIDs, this is an alias to string.  Being a type captures\nintent and helps make sure that UIDs and names do not get conflated.\n"
    },
    "k8s.io.apimachinery.pkg.util.intstr.IntOrString": {
      "description": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString\n\n+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true\n",
      "anyOf": [
        {
          "type": "integer"
        },
        {
          "type": "string"
        }
      ]
    }
  }
}
